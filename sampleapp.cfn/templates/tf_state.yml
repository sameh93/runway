AWSTemplateFormatVersion: '2010-09-09'
Conditions:
  BucketNameOmitted: !Or
    - !Equals
      - !Ref 'BucketName'
      - ''
    - !Equals
      - !Ref 'BucketName'
      - undefined
  TableNameOmitted: !Or
    - !Equals
      - !Ref 'TableName'
      - ''
    - !Equals
      - !Ref 'TableName'
      - undefined
  EC2HighAvailability:
    Fn::Equals:
    - Ref: HighAvailability
    - 'YES'
Description: Terraform State Resources
Outputs:
  PolicyArn:
    Description: Managed policy Arn
    Value: !Ref 'ManagementPolicy'
  TerraformStateBucketArn:
    Description: Arn of bucket storing Terraform state
    Value: !GetAtt 'TerraformStateBucket.Arn'
  TerraformStateBucketName:
    Description: Name of bucket storing Terraform state
    Value: !Ref 'TerraformStateBucket'
  TerraformStateTableName:
    Description: Name of DynamoDB table for Terraform state
    Value: !Ref 'TerraformStateTable'
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value:
      Ref: Ec2Instance
Parameters:
  BucketName:
    Default: ''
    Description: (optional) Name for the S3 bucket
    Type: String
  TableName:
    Default: ''
    Description: (optional) Name for the DynamoDB table
    Type: String
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: String
    MinLength: '1'
    MaxLength: '255'
    AllowedPattern: "[\\x20-\\x7E]*"
    ConstraintDescription: can contain only ASCII characters.
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
    - t1.micro
    - t2.micro
    - m1.small
    - m1.medium
    - m1.large
    - m1.xlarge
    - m2.xlarge
    - m2.2xlarge
    - m2.4xlarge
    - m3.xlarge
    - m3.2xlarge
    - c1.medium
    - c1.xlarge
    - cc1.4xlarge
    - cc2.8xlarge
    - cg1.4xlarge
    ConstraintDescription: must be a valid EC2 instance type.
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VpcId of your existing Virtual Private Cloud (VPC)
    ConstraintDescription: must be the VPC Id of an existing Virtual Private Cloud.
  SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: Default SubnetId of an existing subnet
    ConstraintDescription: must be an existing subnet in the selected Virtual Private
      Cloud.
  SecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Security group Id of an existing security group
    ConstraintDescription: must be an existing subnet in the selected Virtual Private
      Cloud.
  ProjName:
    Type: String
    Description: Project Name
  OSId:
    Type: String
    Description: WebServer EC2 instance OS
    ConstraintDescription: must be an existing AMI Id.
  HighAvailability:
    Type: String
    Description: is this instance for high availability?
    AllowedValues:
    - 'YES'
    - 'NO'
    Default: 'NO'
  00CustomerName:
    Type: String
    Description: Please Enter Customer Name
  02VPCName:
    Type: String
    Description: VPC name
  02VpcCIDR:
    Type: String
    Description: Please enter VPC CIDR
    Default: 10.50.0.0/16
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.
  01InternetGatewayName:
    Type: String
    Description: InternetGateway name
Resources:
  ManagementPolicy:
    Properties:
      Description: Managed policy for Terraform state management.
      Path: /
      PolicyDocument:
        Statement:
          - Action:
              - s3:ListBucket
            Effect: Allow
            Resource:
              - !GetAtt 'TerraformStateBucket.Arn'
          - Action:
              - s3:GetObject
              - s3:PutObject
            Effect: Allow
            Resource:
              - !Join
                - ''
                - - !GetAtt 'TerraformStateBucket.Arn'
                  - /*
          - Action:
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - !GetAtt 'TerraformStateTable.Arn'
        Version: '2012-10-17'
    Type: AWS::IAM::ManagedPolicy
  TerraformStateBucket:
    DeletionPolicy: Retain
    Properties:
      AccessControl: Private
      BucketName: !If
        - BucketNameOmitted
        - !Ref 'AWS::NoValue'
        - !Ref 'BucketName'
      LifecycleConfiguration:
        Rules:
          - NoncurrentVersionExpirationInDays: 90
            Status: Enabled
      VersioningConfiguration:
        Status: Enabled
    Type: AWS::S3::Bucket
  TerraformStateTable:
    Properties:
      AttributeDefinitions:
        - AttributeName: LockID
          AttributeType: S
      KeySchema:
        - AttributeName: LockID
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
      TableName: !If
        - TableNameOmitted
        - !Ref 'AWS::NoValue'
        - !Ref 'TableName'
    Type: AWS::DynamoDB::Table
  Ec2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType:
        Ref: InstanceType
      KeyName:
        Ref: KeyName
      ImageId:
        Ref: OSId
      NetworkInterfaces:
      - AssociatePublicIpAddress: 'true'
        DeviceIndex: '0'
        GroupSet:
        - Ref: SecurityGroupId
        SubnetId:
          Ref: SubnetId
      Tags:
      - Key: Name
        Value:
          Fn::If:
          - EC2HighAvailability
          - Fn::Join:
            - ''
            - - AMZIRL
              - Ref: ProjName
              - " - PRD - "
              - 'WEBAPP- '
              - A02
          - Fn::Join:
            - ''
            - - AMZIRL
              - Ref: ProjName
              - " - PRD - "
              - 'WEBAPP- '
              - A01
  IPAddress:
    Type: AWS::EC2::EIP
    Properties:
      Domain: VPC
      InstanceId:
        Ref: Ec2Instance
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock:
        Ref: 02VpcCIDR
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: 00CustomerName
            - "-"
            - Ref: 02VPCName
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: 00CustomerName
            - "-"
            - Ref: 01InternetGatewayName
  

